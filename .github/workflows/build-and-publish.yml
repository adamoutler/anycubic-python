name: Build anycubic-python 🐍 distributions
on: push
jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: python
          package-name: ${{env.ACTION_NAME}}
          command: github-release
      - uses: actions/checkout@v2
      - name: tag major and minor versions
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git remote add gh-token "https://${{ secrets.REPO_SECRET }}@github.com/google-github-actions/release-please-action.git"
          git tag -d v${{ steps.release.outputs.major }} || true
          git tag -d v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git push origin :v${{ steps.release.outputs.major }} || true
          git push origin :v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git tag -a v${{ steps.release.outputs.major }} -m "Release v${{ steps.release.outputs.major }}"
          git tag -a v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} -m "Release v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}"
          git push origin v${{ steps.release.outputs.major }}
          git push origin v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint flake8
      - name: Analysing the code with pylint
        run: |
          find . -name '*.py' -exec pylint {} \;
      - name: Analyze trhe code with flake8
        run: |
          flake8 src/uart_wifi

  build:
    runs-on: ubuntu-18.04
    name: Build Python 🐍 ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Set up Python
        with:
          python-version: "3.9"
          architecture: x64
      - run: >-
          python -m
          pip install
          build
          --user

      - name: Build a binary wheel and a source tarball
        run: >-
          python -m
          build
          --sdist
          --wheel
          --outdir dist/
  Test:
    runs-on: ubuntu-18.04
    needs:
      - build
    name: Test 🐍 ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Set up Python
        with:
          python-version: "3.9"
          architecture: x64
      - run: |
          python -m pip install --upgrade pip;
          pip install -r requirements.txt;
          pip install -r requirements-test.txt;
      - name: Test
        run: >-
          export PYTHONPATH=$(pwd)/src/;
          pytest
  publish:
    needs:
      - Test
      - lint
    runs-on: ubuntu-18.04
    name: Build 📦 and ship 🏗️ new tags  to PyPI
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Set up Python
        with:
          python-version: pypy-3.9
          architecture: x64
      - run: >-
          python -m
          pip install
          build
          --user
      - name: Build a binary wheel and a source tarball
        run: >-
          python -m
          build
          --sdist
          --wheel
          --outdir dist/
      - name: Publish
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
